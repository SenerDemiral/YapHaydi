@implements IDisposable
@rendermode @(new InteractiveServerRenderMode(prerender: false))

@* <div onclick="document.querySelector('.sener').classList.toggle('can');"> *@
<a href="/">YapHaydi</a>
@* <div onclick="document.querySelector('.sener').classList.toggle('bg-red-400')">xxxx</div> *@

<div style="display:none">
	<ul id="myUL" style="position: absolute; background-color: antiquewhite; color: black; top:3px; left:100px">
		<li>
			<span class="caret"
				  onclick="this.parentElement.querySelector('.nested').classList.toggle('active');this.classList.toggle('caret-down');">MENU</span>
			<ul class="nested">
				<li><a href="tts">⚙️Tanımlar</a></li>
				<li>Coffee</li>
				<li>
					<span class="caret"
						  onclick="this.parentElement.querySelector('.nested').classList.toggle('active');this.classList.toggle('caret-down');">Tea</span>
					<ul class="nested">
						<li>Black Tea</li>
						<li>White Tea</li>
						<li>
							<span class="caret"
								  onclick="this.parentElement.querySelector('.nested').classList.toggle('active');this.classList.toggle('caret-down');">
								Green Tea
							</span>
							<ul class="nested">
								<li>Sencha</li>
								<li>Gyokuro</li>
								<li>
									<a href="/" onclick="document.body.querySelector('.nested').classList.toggle('active')">
										<span class="material-symbols-outlined">home</span>
										Machua
									</a>
								</li>
								<li>Pi Lo Chun</li>
							</ul>
						</li>
					</ul>
				</li>
				<li>Bidiğimiz Çay</li>
			</ul>
		</li>
	</ul>
</div>


<select @bind="slc" class="sener rounded px-2 py-1 h-6 bg-red-400 ml-auto">
	<option value="">🔘 MENU</option>
	<option value="counter">Counter</option>
	<option value="tts">⚙️ Tanım</option>
	<option value="orderypnpending">📌 Aktif</option>
	<option value="orderypndone">💤 Arşiv</option>
	@if (string.IsNullOrEmpty(UsrTkn))
	{
		<option value="login">↗️ Login</option>
	}
	else
	{
		<option value=@($"logout/{@rLCV.UEXId}")>↙️ Logout</option>
	}

</select>


@*
<div class="top-row ps-3 navbar navbar-dark">
	<div class="container-fluid">
		<a class="text-white" href=""><span>YapHaydi</span> <span class="material-symbols-outlined mt-2 relative top-1 ">family_home</span></a>
	</div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
	<nav class="flex-column">


		<div class="nav-item px-3">
			<NavLink class="nav-link" href="counter" Match="NavLinkMatch.All">
				<span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Counter
			</NavLink>
		</div>

		<div class="nav-item px-3">
			<NavLink class="nav-link" href="orderypnpending">
				<span class="material-symbols-outlined pr-2 text-8xl">cycle</span>
				Aktif
			</NavLink>
		</div>

		<div class="nav-item px-3">
			<NavLink class="nav-link" href="orderypndone">
				<span class="material-symbols-outlined pr-2 text-lg">done_all</span>
				Arşiv
			</NavLink>
		</div>

		<div class="nav-item px-3">
			<NavLink class="nav-link" href="tts">
				<span class="material-symbols-outlined pr-2 text-lg">settings</span>
				Tanımlar
			</NavLink>
		</div>

		@if (string.IsNullOrEmpty(UsrTkn))
		{
			<div class="nav-item px-3">
				<NavLink class="nav-link" href="/login">
					<span class="material-symbols-outlined pr-2">login</span>
					Login
				</NavLink>
			</div>
		}
		else
		{
			<div class="nav-item px-3">
				<NavLink class="nav-link" href=@($"logout/{@rLCV.UEXId}")>
					<span class="material-symbols-outlined pr-2">logout</span>
					Logout
				</NavLink>
			</div>
		}

		<select @bind="slc" class="rounded px-2 py-1 ">
			<option value="">🔘 MENU</option>
			<option value="counter">Counter</option>
			<option value="tts">⚙️ Tanım</option>
			<option value="orderypnpending">📌 Aktif</option>
			<option value="orderypndone">💤 Arşiv</option>
			@if (string.IsNullOrEmpty(UsrTkn))
			{
				<option value="login">↗️ Login</option>
			}
			else
			{
				<option value=@($"logout/{@rLCV.UEXId}")>↙️ Logout</option>
			}
		</select>
	</nav>
</div>
*@
<style>

	span.sz-48 {
		font-size: 48px;
		font-variation-settings: 'OPSZ' 48;
	}
</style>


@code {
	[Inject]
	IDataAccess db { get; set; }

	[Inject]
	NavigationManager NM { get; set; }

	[Inject]
	CascadingValueSource<RLCV>? RLCVsource { get; set; } = default;

	[CascadingParameter]
	public RLCV? rLCV { get; set; } = default;

	[Parameter]
	public string? UsrTkn { get; set; } = default;

	private string menu;
	public string slc
	{
		get => menu;
		set
		{
			menu = value;
			NM.NavigateTo(value);
		}
	}

	public void Dispose()
	{
		var usr = db.LoadRec<ULE, dynamic>("select * from UEX_EXIT(@UEXId)", new { UEXId = rLCV.UEXId });
	}



	protected override void OnInitialized()
	{
		if (!string.IsNullOrWhiteSpace(UsrTkn))
		{
			var usr = db.LoadRec<ULE, dynamic>("select * from UEX_ENTER(@Tkn)", new { Tkn = UsrTkn });
			if (usr != null)
			{
				if (usr.UsrId > 0)
				{
					rLCV.UsrTkn = UsrTkn;
					rLCV.UsrId = usr.UsrId;
					rLCV.UEXId = usr.UEXId;
					rLCV.FrmId = usr.FFId;
				}
				else
				{
					UsrTkn = "";
				}
			}
		}
	}


}