@rendermode @(new InteractiveServerRenderMode(prerender: false))
@inject IDataAccess db

@if (tt is not null)
{

	<div class="flex justify-between  text-base">
		<button disabled="@RO" @onclick="Cancel">⬅️</button>
		@if (appState.IsFrm)
		{
			<button disabled="@RO" @onclick="NewRec">➕</button>
			<button disabled="@RO" @onclick="Save">✅Kaydet	</button>
		}
	</div>

	<table>
		<tbody>
			<tr>
				<td class="border border-slate-300 px-2">Id</td>
				<td class="border border-slate-300 px-2">@tt.TTID</td>
			</tr>
			<tr>
				<td class="border border-slate-300 px-2">Tip</td>
				<td class="border border-slate-300 px-2">@tt.Typ</td>
			</tr>
			<tr>
				<td class="border border-slate-300 px-2">Tag</td>
				<td class="border border-slate-300">
					<input type="text"
						   maxlength="50"
						   size="30"
						   class="px-1"
						   @bind="tt.Tag" />
				</td>
			</tr>
			<tr>
				<td class="border border-slate-300 px-2">Ad</td>
				<td class="border border-slate-300">
					<input type="text"
						   maxlength="50"
						   size="30"
						   class="px-1"
						   @bind="tt.Ad" />
				</td>
			</tr>
			<tr>
				<td class="border border-slate-300 px-2">Tel</td>
				<td class="border border-slate-300">
					<input type="text"
						   maxlength="50"
						   size="30"
						   class="px-1"
						   @bind="tt.Tel" />
				</td>
			</tr>
			<tr>
				<td class="border border-slate-300 px-2">Mail</td>
				<td class="border border-slate-300">
					<input type="text"
						   maxlength="50"
						   size="30"
						   class="px-1"
						   @bind="tt.Mail" />
				</td>
			</tr>
			<tr>
				<td class="border border-slate-300 px-2">Adres</td>
				<td class="border border-slate-300">
					<textarea readonly="@RO"
							  cols="30"
							  class="h-16 px-1"
							  @bind="tt.Adres"/>
				</td>
			</tr>

			<tr>
				<td colspan="2" class="border border-slate-300 px-2 text-center">Yetkiler</td>
			</tr>
			<tr>
				<td class="border border-slate-300 px-2">Firma</td>
				<td class="border border-slate-300 px-2">
					<input type="checkbox"
						   @bind="tt.IsFrmb" />
				</td>
			</tr>
			<tr>
				<td class="border border-slate-300 px-2">Departman</td>
				<td class="border border-slate-300 px-2">
					<input type="checkbox"
						   @bind="tt.IsDptb" />
				</td>
			</tr>
			<tr>
				<td class="border border-slate-300 px-2">Yapan</td>
				<td class="border border-slate-300 px-2">
					<input type="checkbox"
						   @bind="tt.IsYpnb" />
				</td>
			</tr>
			<tr>
				<td>Info</td>
				<td>
					<textarea readonly="@RO" class="px-1"
							  rows="4" cols="30"
							  @bind="tt.Inf"
							  style="resize:vertical;height:42px" />
				</td>
			</tr>
		</tbody>
	</table>
}

@code {
	[CascadingParameter] 
	public AppState appState { get; set; }
	[Parameter] public int TTId { get; set; }
	private TT tt;
	private bool RO = false;
	[Parameter] public EventCallback OnSaved { get; set; }
	[Parameter] public EventCallback OnCancelled { get; set; }

	private void NewRec()
	{
		string typ = tt.Typ;
		tt = new();
		tt.Typ = typ;
	}

	private void Cancel()
	{
		OnCancelled.InvokeAsync();
	}

	private void Save()
	{
		var rec = new
		{
			TTID = tt.TTID,
			FFID = appState.FrmId,
			TYP = tt.Typ,
			AD = tt.Ad,
			TAG = tt.Tag,
			ADRES = tt.Adres,
			TEL = tt.Tel,
			MAIL = tt.Mail,
			INF = tt.Inf,
			IsFrm = tt.IsFrm,
			IsDpt = tt.IsDpt,
			IsYpn = tt.IsYpn,

		};

		db.SaveRec("TT_MDF", rec);
		OnSaved.InvokeAsync();
	}

	protected override void OnInitialized()
	{
		if (TTId == 0)
			tt = new();
		else
			tt = db.LoadRec<TT, dynamic>("select * from TT where TTId = @TTId", new { TTId = TTId });
	}
}
