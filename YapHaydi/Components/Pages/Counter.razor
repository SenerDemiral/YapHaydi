@rendermode @(new InteractiveServerRenderMode(prerender: false))
@implements IDisposable
@inject INewsContainer News
@page "/counter"

<PageTitle>Counter</PageTitle>
<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
	// DENEME
	[CascadingParameter]
	public RLCV? rLCV { get; set; } = default;

	private int currentCount = 0;

	private void IncrementCount()
	{
		NewsMdl news = new()
		{
			FrmId = 101,
			YpnId = 5,
		};
		News.NotifyChanged(news);
		//currentCount++;
	}

	protected override void OnInitialized()
	{
		News.OnChange += NewsChanged;
	}

	public void NewsChanged(NewsMdl news)
	{
		if (news.FrmId == rLCV.FrmId) 
		{
			currentCount += news.YpnId;
			InvokeAsync(StateHasChanged);
		}
	}

	public void Dispose()
	{
		News.OnChange -= NewsChanged;
	}
}
