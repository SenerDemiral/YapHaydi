
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />
    <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="YapHaydi.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
    <HeadOutlet />
</head>

<body style="font-size:12px">
    <Routes />
    <script src="_framework/blazor.web.js"></script>
</body>

</html>

@* @rendermode="new InteractiveServerRenderMode(prerender: false)" *@

@code {
    // [Inject] Blazored.LocalStorage.ILocalStorageService LocalStorage { get; set; } = default;
    // private string message = "";
    // protected override async Task OnInitializedAsync()
    // {
    //     await LocalStorage.SetItemAsStringAsync("message", "Hello World!");
    //     message = await LocalStorage.GetItemAsStringAsync("message");
    // }

    [CascadingParameter]
    public HttpContext? context { get; set; }
    [Inject]
    CascadingValueSource<RLCV>? RLCVsource { get; set; } = default;

    [CascadingParameter]
    public RLCV? rLCV { get; set; } = default;

    [Inject] IUsrDic usrDic { get; set; }



    string Pge = "App";
    protected override void OnInitialized()
    {
        var usrTkn = context.Request.Cookies["sener"];  // null ise yok/expired
        if(usrTkn != null)
        {
            var ok = usrDic.Add(usrTkn); // Tkn a karsilik gelen usr bilmiyor
            if (!ok)
            {
                CookieOptions cookieOptions = new CookieOptions();
                cookieOptions.Expires = DateTime.Now;   // Sure bitince browser silmiyor, ama null gonderiyor
                context.Response.Cookies.Append("sener", usrTkn, cookieOptions);
            }
        }


        rLCV.usrName = context.Request.Cookies["sener"];

        var aa = usrDic.Check(rLCV.usrName);
    }
    public override async Task SetParametersAsync(ParameterView parameters)
    {
        Console.WriteLine($"{Pge}.SPA s");
        await base.SetParametersAsync(parameters);


        // Cookie den nul dışında bir değer geliyorsa (Var&Geçerli[süresi dolmamış])
        // Gelen UsrTkn ile UsrDic de yoksa
        //   DB den ara
        //      Db de var UsrId & Expire time getir
        //          UsrDic ekle
        //      Yoksa Login yaptır
        // Varsa OK, legal user

        // Login 
        // Name&Pwd alıp DB check
        // Ok ise
        //      Onceki kayıtlarında expire etmiş kayıtları sil
        //      Yenisini ekle
        //      UsrDic e yaz

        // Logout
        // DB den sil
        // Cookie den sil
    }

    public void Dispose()
    {
        
    }

}